@using Microsoft.AspNetCore.Routing
@using Pelo.v2.Web.Models.Invoice
@using Pelo.v2.Web.Models.Datatables
@using Pelo.v2.Web.Models.Datatables.Render
@model Pelo.v2.Web.Models.Customer.CustomerInvoiceSearchModel


@Html.HiddenFor(c=>c.CustomerId)

@await Html.PartialAsync("Table", new DataTablesModel
   {
       Name = "invoice-grid",
       UrlRead = new DataUrl("GetInvoicesByCustomerId", "Customer", null),
       SearchButtonId = "search-invoice",
       Ordering = false,
       DrawCallback = "updateInvoiceCount",
       Filters = new List<FilterParameter> {
                                                   new FilterParameter(nameof(Model.CustomerId))
                                           },
       ColumnCollection = new List<ColumnProperty> {
                                                           new ColumnProperty(nameof(InvoiceModel.InvoiceStatus))
                                                           {
                                                                   Title = "Trạng thái",
                                                                   Width = "150",
                                                                   Render = new RenderCustom("displayInvoiceStatus")
                                                           },
                                                           new ColumnProperty(nameof(InvoiceModel.Code))
                                                           {
                                                                   Title = "Mã đơn hàng",
                                                                   Render = new RenderLink(new DataUrl("Invoice/Detail","Id"))
                                                           },
                                                           new ColumnProperty(nameof(InvoiceModel.Products))
                                                           {
                                                                   Title = "Sản phẩm",
                                                                   Render = new RenderCustom("displayProduct")
                                                           },
                                                           new ColumnProperty(nameof(InvoiceModel.Branch))
                                                           {
                                                                   Title = "Chi nhánh",
                                                                   Render = new RenderCustom("displayBranch")
                                                           },
                                                           new ColumnProperty(nameof(InvoiceModel.DeliveryDate))
                                                           {
                                                                   Title = "Ngày giao",
                                                                   Width = "120",
                                                                   Render = new RenderCustom("displayDate")
                                                           },
                                                           new ColumnProperty(nameof(InvoiceModel.DateCreated))
                                                           {
                                                                   Title = "Ngày tạo",
                                                                   Width = "120",
                                                                   Render = new RenderCustom("displayDate")
                                                           }
                                                   }
   })

<script>
    $(document).ready(function () {
        var datatable=$('#invoice-grid').DataTable();
        if(datatable) {
            setTimeout(function() {
                $($.fn.dataTable.tables(true)).DataTable().columns.adjust().draw();
            },200);
        }
    });
    function displayInvoiceStatus(data, type, row, meta) {
        return '<div style="text-align:center;margin:auto;"><span class="label" style="width:150px;background-color:' +
            row.InvoiceStatusColor +
            '">' +
            row.InvoiceStatus +
            '</span></div>';
    }
    function displayProduct(data, type, row, meta) {
        var products = '';
        var condition = '';
        if (row.Products) {
            if (row.Products.length > 0) {
                for (var i = 0; i < row.Products.length; i++) {
                    var description = '';
                    if (row.Products[i].description) {
                        description = '(' + row.Products[i].description + ')';
                    }
                    products = products +
                        condition +
                        '<span>' +
                        row.Products[i].name +
                        ' ' +
                        description +
                        '</span>';
                    condition = ', ';
                }
            }
        }
        return '<div style="padding:10px;">' + products + '</div></div>';
    }
    function displayBranch(data, type, row, meta) {
        var branch = '';
        if (isNull(row.Branch)) {
            branch = '<span>Chi nhánh: <span style="font-weight:700;">' + row.Branch + '</span></span><br/>';
        }
        var userCreated = '';

        if (isNull(row.UserCreatedPhone)) {
            userCreated = '<span>Lên đơn: <span style="font-weight:700;"><a href="tel:' +
                row.UserCreatedPhone +
                '">' +
                row.UserCreated +
                '</a></span></span><br/>';
        } else {
            userCreated = '<span>Lên đơn: <span style="font-weight:700;">' +
                row.UserCreated +
                '</span></span><br/>';
        }

        var userSell = '';

        if (isNull(row.UserSellPhone)) {
            userSell = '<span>Bán hàng: <span style="font-weight:700;"><a href="tel:' +
                row.UserSellPhone +
                '">' +
                row.UserSell +
                '</a></span></span><br/>';
        } else {
            userSell = '<span>Bán hàng: <span style="font-weight:700;">' +
                row.UserSell +
                '</span></span><br/>';
        }
        var userDeliveries = '';
        var condition = '';
        if (row.UserDeliveries) {
            if (row.UserDeliveries.length > 0) {
                for (var i = 0; i < row.UserDeliveries.length; i++) {
                    userDeliveries = userDeliveries +
                        condition +
                        '<a href="tel:' +
                        row.UserDeliveries[i].phone_number +
                        '">' +
                        row.UserDeliveries[i].display_name +
                        '</a>';
                    condition = ', ';
                }
            }
        }
        if (userDeliveries) {
            userDeliveries = '<span>Người giao: <span style="font-weight:700;">' + userDeliveries + '</span></span><br/>';
        }
        return '<div style="padding:10px;">' + branch + userCreated + userSell + userDeliveries + '</div></div>';
    }
</script>
